package com.sample.rules

import models.DadosMonitorados;
import models.ModelsConfigMachines;
import models.ConfCurrentMachine;
import models.ModelsProvisioning;
import models.ModelsMonitoringForRules;
import Starter.Starter;

rule "Executions below 10 minutes"

   when
     m: Integer(Starter.model.getTimesCandidates(m)<=10)
        
    then
    	Starter.model.setTimeSelected(ModelsProvisioning.getTimesCandidates(m));
    	Starter.model.setCpuSelected(ModelsProvisioning.getCpusCandidates(m));
		Starter.model.setCpuUsedSelected(Starter.model.getCpuUsedSelected());
		ModelsProvisioning.setCostbenefit(10/(ModelsProvisioning.getTimesCandidates(m)*ModelsProvisioning.getCpusCandidates(m)*Starter.prices.getCpuPrice()));
    	
		ModelsProvisioning.setValue(ModelsProvisioning.getTimesCandidates(m)*ModelsProvisioning.getCpusCandidates(m)*Starter.prices.getCpuPrice());
    	
        System.out.printf( "Menos de 10 Minutos - CPU Selected %d  | Time Selected %f | preço Selected %f \n",ModelsProvisioning.getCpusCandidates(m), ModelsProvisioning.getTimesCandidates(m), (ModelsProvisioning.getTimesCandidates(m)*ModelsProvisioning.getCpusCandidates(m)*Starter.prices.getCpuPrice()));

end

rule "Execution above 10 minutes"

   when
     m: Integer(ModelsProvisioning.getTimesCandidates(m)>10 &&
     			ModelsProvisioning.getCostbenefit()>ModelsProvisioning.getTimesCandidates(m)/(ModelsProvisioning.getTimesCandidates(m)*ModelsProvisioning.getCpusCandidates(m)*Starter.prices.getCpuPrice()) )
        
    then
    	ModelsProvisioning.setCostbenefit(ModelsProvisioning.getTimesCandidates(m)/(ModelsProvisioning.getTimesCandidates(m)*ModelsProvisioning.getCpusCandidates(m)*Starter.prices.getCpuPrice()));
    	ModelsProvisioning.setValue(ModelsProvisioning.getTimesCandidates(m)*ModelsProvisioning.getCpusCandidates(m)*Starter.prices.getCpuPrice());
    	Starter.model.setTimeSelected(ModelsProvisioning.getTimesCandidates(m));
    	Starter.model.setCpuSelected(ModelsProvisioning.getCpusCandidates(m));
		Starter.model.setCpuUsedSelected(Starter.model.getCpuUsedSelected());
		
        System.out.printf( "Mais de 10 Minutos - CPU Selected %d  | Time Selected %f | preço Selected %f \n",ModelsProvisioning.getCpusCandidates(m), ModelsProvisioning.getTimesCandidates(m), (ModelsProvisioning.getTimesCandidates(m)*ModelsProvisioning.getCpusCandidates(m)*Starter.prices.getCpuPrice()));

end